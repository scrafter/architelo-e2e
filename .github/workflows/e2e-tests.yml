name: E2E tests

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  e2e-tests:
    runs-on: ubuntu-24.04

#    services:
#      db:
#        image: postgres:13
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: pass123
#          POSTGRES_DB: architelo
#        ports:
#          - 5432:5432

    steps:
      - name: Checkout e2e-tests repository
        uses: actions/checkout@v4

      - name: Checkout frontend repository
        uses: actions/checkout@v4
        with:
          repository: scrafter/architelo-panel
          ref: develop
          path: frontend
          token: ${{ secrets.ARCHITELO_SECRET }}

      - name: Checkout backend repository
        uses: actions/checkout@v4
        with:
          repository: scrafter/architelo-api
          ref: develop
          path: backend
          token: ${{ secrets.ARCHITELO_SECRET }}

      - name: Create frontend .env file
        run: echo "${{ secrets.FRONTEND_ENV_FILE }}" > .env
        working-directory: ./frontend

      - name: Create backend .env file
        run: echo "${{ secrets.BACKEND_ENV_FILE }}" > .env
        working-directory: ./backend

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11'

      - name: Install dependencies for e2e-tests
        run: npm install

      - name: Install dependencies for frontend
        run: npm install
        working-directory: ./frontend

      - name: Install dependencies for backend
        run: npm install
        working-directory: ./backend

      - name: Run docker-compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./backend/docker-compose.yml"

      - name: Start backend
        run: npm run start &
        working-directory: ./backend

      - name: Start frontend
        run: npm run build && npm run preview &
        working-directory: ./frontend

      - name: Wait for the backend to be ready
        run: npx wait-on http://localhost:3001/
        working-directory: ./backend

      - name: Wait for the frontend to be ready
        run: npx wait-on http://localhost:4173/
        working-directory: ./frontend

      - name: Run Cypress tests
        run: npm run cy:run
        working-directory: .
